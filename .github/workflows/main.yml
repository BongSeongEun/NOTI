name: NOTI API server CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: noti
  AWS_CODE_DEPLOY_APPLICATION: cicd-noti
  AWS_CODE_DEPLOY_GROUP: cicd-noti-group
  working-directory: ./backend
  resource-path: ./backend/src/main/resources/application.properties

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - uses: actions/checkout@v4
    - run: touch .backend/src/main/resources/application.properties
    - run: echo "${{secrets.APPLICATION}}" > .backend/src/main/resources/application.properties
    - uses: actions/upload-artifact@v2
      with:
        name: application.properties
        path: .backend/src/main/resources/application.properties

    - name: Grant execute permission for gradlew
      run: sudo su
      working-directory: ${{ env.working-directory }}
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ env.working-directory }}

    - name: gradlew Update
      run: ./gradlew build
      working-directory: ${{ env.working-directory }}
      
    - name: Build with Gradle
      run: java -jar hello-spring-0.0.1-SNAPSHOT.jar
      working-directory: ./backend/build/libs

      
      
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
        
    - name: S3에 업로드
      run: aws deploy push --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --ignore-hidden-files --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip --source .
   
    - name: EC2에 배포
      run: aws deploy create-deployment --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip  
#1
